package com.polban.JadwalHarianLang.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.errors.messageTargets.MessageTarget;
import jetbrains.mps.errors.messageTargets.NodeMessageTarget;
import jetbrains.mps.errors.IErrorReporter;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SProperty;
import org.jetbrains.mps.openapi.language.SConcept;

public class check_PropertiWaktu_NonTypesystemRule extends AbstractNonTypesystemRule_Runtime implements NonTypesystemRule_Runtime {
  public check_PropertiWaktu_NonTypesystemRule() {
  }
  public void applyRule(final SNode propertiWaktu, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    if ((SPropertyOperations.getInteger(SLinkOperations.getTarget(propertiWaktu, LINKS.waktuSelesai$oV6d), PROPS.Jam$gVFn) * 60 + SPropertyOperations.getInteger(SLinkOperations.getTarget(propertiWaktu, LINKS.waktuSelesai$oV6d), PROPS.Menit$gVUo)) <= (SPropertyOperations.getInteger(SLinkOperations.getTarget(propertiWaktu, LINKS.waktuMulai$oURc), PROPS.Jam$gVFn) * 60 + SPropertyOperations.getInteger(SLinkOperations.getTarget(propertiWaktu, LINKS.waktuMulai$oURc), PROPS.Menit$gVUo))) {
      {
        final MessageTarget errorTarget = new NodeMessageTarget();
        IErrorReporter _reporter_2309309498 = typeCheckingContext.reportTypeError(propertiWaktu, "Waktu selesai harus lebih besar dari waktu mulai.", "r:ae86b6ad-eff2-4535-8c04-b4bce738b53e(com.polban.JadwalHarianLang.typesystem)", "7288077080416902080", null, errorTarget);
      }
    }
  }
  public SAbstractConcept getApplicableConcept() {
    return CONCEPTS.PropertiWaktu$kl;
  }
  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    return new IsApplicableStatus(argument.getConcept().isSubConceptOf(getApplicableConcept()), null);
  }
  public boolean overrides() {
    return false;
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink waktuMulai$oURc = MetaAdapterFactory.getContainmentLink(0xb20407ef9294e8eL, 0x8050ea856559a353L, 0x44f57300c50f6a9cL, 0x6524737da1e6a2afL, "waktuMulai");
    /*package*/ static final SContainmentLink waktuSelesai$oV6d = MetaAdapterFactory.getContainmentLink(0xb20407ef9294e8eL, 0x8050ea856559a353L, 0x44f57300c50f6a9cL, 0x6524737da1e6a2b0L, "waktuSelesai");
  }

  private static final class PROPS {
    /*package*/ static final SProperty Menit$gVUo = MetaAdapterFactory.getProperty(0xb20407ef9294e8eL, 0x8050ea856559a353L, 0x6524737da1e5653eL, 0x6524737da1e56540L, "Menit");
    /*package*/ static final SProperty Jam$gVFn = MetaAdapterFactory.getProperty(0xb20407ef9294e8eL, 0x8050ea856559a353L, 0x6524737da1e5653eL, 0x6524737da1e5653fL, "Jam");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept PropertiWaktu$kl = MetaAdapterFactory.getConcept(0xb20407ef9294e8eL, 0x8050ea856559a353L, 0x44f57300c50f6a9cL, "com.polban.JadwalHarianLang.structure.PropertiWaktu");
  }
}
