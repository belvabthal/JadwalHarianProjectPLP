package com.polban.JadwalHarianLang.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_Jadwal;
  private ConceptPresentation props_Kegiatan;
  private ConceptPresentation props_Program;
  private ConceptPresentation props_PropertiKategori;
  private ConceptPresentation props_PropertiLokasi;
  private ConceptPresentation props_PropertiStatus;
  private ConceptPresentation props_PropertiWaktu;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.Jadwal:
        if (props_Jadwal == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Jadwal");
          props_Jadwal = cpb.create();
        }
        return props_Jadwal;
      case LanguageConceptSwitch.Kegiatan:
        if (props_Kegiatan == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Kegiatan");
          props_Kegiatan = cpb.create();
        }
        return props_Kegiatan;
      case LanguageConceptSwitch.Program:
        if (props_Program == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Program");
          props_Program = cpb.create();
        }
        return props_Program;
      case LanguageConceptSwitch.PropertiKategori:
        if (props_PropertiKategori == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("PropertiKategori");
          props_PropertiKategori = cpb.create();
        }
        return props_PropertiKategori;
      case LanguageConceptSwitch.PropertiLokasi:
        if (props_PropertiLokasi == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("PropertiLokasi");
          props_PropertiLokasi = cpb.create();
        }
        return props_PropertiLokasi;
      case LanguageConceptSwitch.PropertiStatus:
        if (props_PropertiStatus == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("PropertiStatus");
          props_PropertiStatus = cpb.create();
        }
        return props_PropertiStatus;
      case LanguageConceptSwitch.PropertiWaktu:
        if (props_PropertiWaktu == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("PropertiWaktu");
          props_PropertiWaktu = cpb.create();
        }
        return props_PropertiWaktu;
    }
    return null;
  }
}
